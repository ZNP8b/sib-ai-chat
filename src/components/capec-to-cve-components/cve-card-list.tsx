import { CapecToCveSkeleton } from '@/components/capec-to-cve-components/capec-to-cve-skeleton.tsx'
import { Center, For, Stack, Text } from '@chakra-ui/react'
import { CveCard } from '@/components/capec-to-cve-components/cve-card.tsx'
import { NvdCveResponse } from '@/components/capec-to-cve-components/types.tsx'
import { UseMutationResult } from '@tanstack/react-query'
import { AxiosResponse } from 'axios'
import { CVECardListPagination } from '@/components/capec-to-cve-components/cve-card-list-pagination.tsx'
import { UseFormGetValues } from 'react-hook-form'

interface CveCardListProps {
  CVEs: NvdCveResponse | undefined
  mutation: UseMutationResult<AxiosResponse<any, any>, Error, { cweId: string; page: number; }, unknown>
  getValues: UseFormGetValues<{ cweId: string }>
  page: number
  setPage: (page: number) => void
}

export function CveCardList({
                              CVEs,
                              mutation,
                              getValues,
                              page, setPage,
                            }: CveCardListProps) {
  return (
    <>
      <Stack
        marginTop="30px"
        gap="4"
        direction="row"
        wrap="wrap"
        justify="center"
      >
        {mutation.isPending && <CapecToCveSkeleton />}

        {CVEs?.totalResults === 0 && !mutation.isPending && (
          <Text>Ничего не найдено</Text>
        )}

        {!mutation.isPending && (
          <For each={CVEs?.vulnerabilities}>
            {(cve, index) => <CveCard cve={cve.cve} key={cve.cve.id + index} />}
          </For>
        )}


      </Stack>

      {CVEs?.totalResults !== undefined && !mutation.isPending && (
        <Center marginTop="16px">
          <CVECardListPagination page={page} setPage={setPage} getValues={getValues} count={CVEs.totalResults} mutation={mutation} />
        </Center>
      )}

    </>
  )
}
